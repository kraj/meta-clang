From e7c1d4b74df67070d3666843caeced417387886e Mon Sep 17 00:00:00 2001
From: Khem Raj <raj.khem@gmail.com>
Date: Sun, 2 Aug 2020 10:11:00 -0700
Subject: [PATCH 25/26] libcxx: Define __NR_futex to be __NR_futex_time64 on
 riscv32

RISCV glibc has decided to use 64bit time_t from get go unlike
other 32bit architecture therefore aliasing __NR_futex to
__NR_futex_time64 helps avoid the below errors on rv32

Upstream-Status: Submittted [https://reviews.llvm.org/D85095]
Signed-off-by: Khem Raj <raj.khem@gmail.com>
---
 libcxx/src/atomic.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/libcxx/src/atomic.cpp
+++ b/libcxx/src/atomic.cpp
@@ -21,6 +21,16 @@
 #include <linux/futex.h>
 #include <sys/syscall.h>
 
+// libc++ uses SYS_futex, which it expects from system C library.
+// in glibc (/usr/include/bits/syscall.h defines it in terms of of NR_futex)
+// rv32 is using 64bit time_t from get go unlike other 32bit architectures
+// in glibc, therefore it wont have NR_futex defined but just NR_futex_time64
+// this aliases it to NR_futex so that SYS_futex is then defined for rv32
+
+#if !defined(SYS_futex) && defined(SYS_futex_time64)
+#define SYS_futex SYS_futex_time64
+#endif
+
 #else // <- Add other operating systems here
 
 // Baseline needs no new headers
