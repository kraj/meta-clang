libadb.mk: modifications to make it build in yocto environment

Adding an include file that is setting the common flags.
Changed the cppflag to include the headers from other components
of android-tools

Modified LDflags so that the libraries that are coming from other android-tools
are searched in the output folder.

Modified the build rule so that it outputs the binary to the OUT_DIR

Signed-off-by: Nisha Parrakat <Nisha.Parrakat@kpit.com>

--- git/system/core/debian/libadb.mk	2021-04-30 16:29:34.596618862 +0200
+++ git/system/core/debian/libadb.mk	2021-04-30 16:36:53.932837490 +0200
@@ -1,3 +1,4 @@
+include ../../rules_yocto.mk
 NAME := libadb
 
 LIBADB_SRC_FILES := \
@@ -43,18 +44,18 @@
             -Ibase/include \
             -Idiagnose_usb/include \
             -Ilibcrypto_utils/include \
-            -Iinclude \
+            -Iinclude -I$(OUT_DIR)/usr/include \
             -DPLATFORM_TOOLS_VERSION='"$(PLATFORM_TOOLS_VERSION)"' \
             -DADB_HOST=1 -DADB_VERSION='"$(DEB_VERSION)"'
 
 LDFLAGS += -shared -Wl,-soname,$(NAME).so.0 \
            -Wl,-rpath=/usr/lib/$(DEB_HOST_MULTIARCH)/android \
-           -L/usr/lib/$(DEB_HOST_MULTIARCH)/android -lcrypto \
-           -lpthread -L. -lbase -lcutils -lcrypto_utils -lusb-1.0
+           -L$(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android -lcrypto \
+           -lpthread -lbase -lcutils -lcrypto_utils -lusb-1.0
 
 $(NAME).so: $(SOURCES)
-	$(CXX) $^ -o $(NAME).so.0 $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS)
-	ln -s $(NAME).so.0 $(NAME).so
+	$(CXX) $^ -o $(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android/$(NAME).so.0 $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS)
+	ln -s $(NAME).so.0 $(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android/$(NAME).so
 
 transport_mdns_unsupported.cpp:
 	echo 'void init_mdns_transport_discovery(void) {}' > transport_mdns_unsupported.cpp
