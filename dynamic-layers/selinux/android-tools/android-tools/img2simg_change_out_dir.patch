patching img2simg.mk to build in yocto environment.

Changes include:
Introduced an output folder which will keep all the outputs from the
android-tools.

Adding an include file that is setting the common flags.
Changed the cppflag to include the headers from other components
of android-tools

Modified LDflags so that the libraries that are coming from other android-tools
are searched in the output folder.

Modified the build rule so that it outputs the binary to the OUT_DIR

Signed-off-by: Nisha Parrakat <Nisha.Parrakat@kpit.com>

Upstream-Status: Pending

--- git/system/core/debian/img2simg.mk	2021-05-12 09:05:38.580607289 +0000
+++ git/system/core/debian/img2simg.mk	2021-05-12 09:09:04.331908253 +0000
@@ -1,13 +1,14 @@
+include ../../rules_yocto.mk
 NAME = img2simg
 SOURCES = img2simg.cpp
 SOURCES := $(foreach source, $(SOURCES), libsparse/$(source))
 CPPFLAGS += -Ilibsparse/include -Iinclude -std=gnu++17
-LDFLAGS += -Wl,-rpath=/usr/lib/$(DEB_HOST_MULTIARCH)/android \
-           -Wl,-rpath-link=. \
-           -L. -lsparse
+LDFLAGS += -Wl,-rpath=$(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android \
+           -Wl,-rpath-link=$(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android/ \
+           -L$(OUT_DIR)/usr/lib/$(DEB_HOST_MULTIARCH)/android/ -lsparse
 
 build: $(SOURCES)
-	$(CXX) $^ -o libsparse/$(NAME) $(CPPFLAGS) $(LDFLAGS)
+	$(CXX) $^ -o $(OUT_DIR)/usr/bin/$(NAME) $(CPPFLAGS) $(LDFLAGS)
 
 clean:
-	$(RM) libsparse/$(NAME)
+	$(RM) $(OUT_DIR)/usr/bin/$(NAME)
